name: Create Project Website

on:
  workflow_run:
    workflows: ["Generate LiaScript Outputs for Changed Courses"]  # Must match the 'name' of the first workflow
    types:
      - completed

permissions:
  contents: write

jobs:
  build_project_yaml:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: check for changes
        id: check_changes
        run: |
          set -euo pipefail

          if git diff --name-only origin/main | grep -q '^courses/'; then
            echo "Changes detected"
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes detected"
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Skip if no changes
        if: steps.check_for_changes.outputs.changes != 'true'
        run: echo "No changes in courses directory, skipping project.yaml generation."

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install LiaScript Exporter
        run: |
          npm install -g @liascript/exporter

      - name: Generate project.yml
        run: |
          set -euo pipefail
          # Define base URL where markdown files will be hosted
          BASE_URL="https://raw.githubusercontent.com/Ifi-DiAgnostiK-Project/LiaScript-Courses/refs/heads/main/"

          # aggregate
          cat project-part.yaml > project.yml

          # Find all markdown files in courses and append as URLs
          for file in $(find courses -type f -name '*.md' | sort); do
            fname=$(basename "$file")
            if [ -n "$fname" ]; then
              echo "  - url: ${BASE_URL}courses/${fname}" >> project.yml
            else
              echo "Skipping empty file name"
              continue
            fi
          done
      
      - name: Generate index.html from project.yml
        run: |
          liaex -i project.yml --format project --project-generate-cache --output docs/index

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit index.html to docs/
        run: |
          git add docs/index.html
          git commit -m "Update index.html from project.yaml [skip ci]" || echo "No changes to commit"
          git push
        env:
          # Required for authentication
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
