name: Generate LiaScript Outputs for Changed Courses

on:
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check_changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: project
          fetch-depth: 2

      - name: Show recent git history for debugging
        run: |
          cd project
          git log --oneline --graph --all | head -20

      - name: Detect Changed Markdown Files
        id: changes
        run: |
          cd project
          files=$(git diff --name-only HEAD^  HEAD | grep '^courses/.*\.md$' || true)
          echo "changed_files=${files//$'\n'/ }" >> $GITHUB_OUTPUT
      - name: Save changed files list
        run: |
          echo "${{ steps.changes.outputs.changed_files }}" > ./changed_files.txt
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: changed-files
          path: ./changed_files.txt

  generate_outputs:
    runs-on: ubuntu-latest
    needs: check_changes

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: changed-files
      - name: Read changed files
        id: read_changes
        run: |
          CHANGED=$(cat changed_files.txt)
          echo "changed_files=${CHANGED}" >> $GITHUB_OUTPUT
          
      - name: Checkout Repository
        uses: actions/checkout@v4
        if: steps.read_changes.outputs.changed_files != ''
        with:
          path: project
          fetch-depth: 2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        if: steps.read_changes.outputs.changed_files != ''        
        with:
          node-version: '22'

      - name: Install LiaScript Exporter
        if: steps.read_changes.outputs.changed_files != ''
        run: |
          npm install -g @liascript/exporter

      - name: Export & Release for Each Changed File
        if: steps.read_changes.outputs.changed_files != ''      
        run: |
          set -euo pipefail
          mkdir -p build
          cd project
          for file in ${{ steps.read_changes.outputs.changed_files }}; do
            filename=$(basename "$file" .md)
            safe_tag=$(echo "$filename" \
              | tr '/' '_' \
              | tr '[:upper:]' '[:lower:]' \
              | sed -e 's/ä/ae/g' -e 's/ö/oe/g' -e 's/ü/ue/g' -e 's/ß/ss/g' \
                    -e 's/Ä/ae/g' -e 's/Ö/oe/g' -e 's/Ü/ue/g' \
                    -e 's/[^a-z0-9_-]//g')

            # Extract version from file
            version=$(grep -oP 'version:\s*\K[\d.]+' "$file" || echo "unknown")

            # Export assets
            liaex -i "$file" --format pdf --output "../build/${filename}_v${version}_Documentation" --pdf-timeout 50000
            liaex -i "$file" --format scorm2004 --output "../build/${filename}_v${version}_SCORM"

            # Create release per file
            gh release create "${safe_tag}_v${version}" \
              --title "Export for $filename (v${version})" \
              "../build/${filename}_v${version}_Documentation.pdf" \
              "../build/${filename}_v${version}_SCORM.zip" \
              --notes "Automated export for $file - version ${version}"

          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create_project_index_html:
    runs-on: ubuntu-latest
    needs: generate_outputs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install LiaScript Exporter
        run: |
          npm install -g @liascript/exporter

      - name: Generate project.yml
        run: |
          python generate_project_yaml.py
      
      - name: Debug output
        run: |
          echo "Generated project.yml:"
          cat project.yml

      - name: Generate index.html from project.yml
        run: |
          set -euo pipefail
          liaex -i project.yml --format project --project-generate-cache --output docs/index

      - name: configure Python and beautifulSoup
        run: |
          sudo apt-get update
          sudo apt-get install python3-pip -y
          pip3 install beautifulsoup4

      - name: modify index.html to include releases
        run: |
          set -euo pipefail
          # Use BeautifulSoup to modify the index.html
          python3 add_release_to_index.py

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # if index didn't change, we don't need to commit; this happens naturally if no courses were changed
      - name: Commit index.html to docs/
        run: |
          git add docs/index.html
          git commit -m "Update index.html from project.yaml"|| echo "No changes to commit"
        env:
          # Required for authentication
          GITHUB_TOKEN: ${{ secrets.PUSH_INDEX_2 }}
      - name: Push changes
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.PUSH_INDEX_2}}
          branch: main
          directory: ./docs
